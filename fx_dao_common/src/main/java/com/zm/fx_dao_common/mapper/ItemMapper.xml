<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zm.fx_dao_common.dao.ItemMapper">
  <resultMap id="BaseResultMap" type="com.zm.fx_dao_common.bean.Item">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="BIGINT" />
      <arg column="categoryid" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="tiitle" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="describle" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="barcode" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="num" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="updated" javaType="java.lang.String" jdbcType="TIMESTAMP" />
      <arg column="created" javaType="java.lang.String" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapAndCate" type="com.zm.fx_dao_common.bean.Item">
  <id column="tid" property="id" />
  <result column="categoryid" property="categoryid"/>
  <result column="tname" property="name"/>
  <result column="tiitle" property="tiitle" />
  <result column="describle" property="describle"/>
  <result column="barcode" property="barcode"/>
  <result column="price" property="price" />
  <result column="num" property="num"/>
  <result column="status" property="status"/>
  <result column="updated" property="updated"/>
  <result column="created" property="created"  />
  <association property="itemCategory" javaType="com.zm.fx_dao_common.bean.ItemCategory">
    <id column="cid" property="id" ></id>
    <result property="name" column="cname"></result>
  </association>
</resultMap>
  <resultMap id="ResultMapAndCateAndDetial" type="com.zm.fx_dao_common.bean.Item">
    <id column="tid" property="id" />
    <result column="categoryid" property="categoryid"/>
    <result column="tname" property="name"/>
    <result column="tiitle" property="tiitle" />
    <result column="describle" property="describle"/>
    <result column="barcode" property="barcode"/>
    <result column="price" property="price" />
    <result column="num" property="num"/>
    <result column="status" property="status"/>
    <result column="updated" property="updated"/>
    <result column="created" property="created"  />
    <association property="itemCategory" javaType="com.zm.fx_dao_common.bean.ItemCategory">
      <id column="cid" property="id"></id>
      <result property="name" column="cname"></result>
      <result property="parentid" column="pid"></result>
    </association>
    <association property="itemDeatil" javaType="com.zm.fx_dao_common.bean.ItemDeatil">
      <id column="did" property="id"></id>
      <result property="itemid" column="itemid"></result>
      <result property="bigmsg" column="dmsg"></result>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, categoryid, name, tiitle, describle, barcode, price, num, status, updated, created
  </sql>
  <select id="selectByExample" parameterType="com.zm.fx_dao_common.bean.ItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zm.fx_dao_common.bean.ItemExample">
    delete from tb_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zm.fx_dao_common.bean.Item">
    insert into tb_item (id, categoryid, name, 
      tiitle, describle, barcode, 
      price, num, status, 
      updated, created)
    values (#{id,jdbcType=BIGINT}, #{categoryid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{tiitle,jdbcType=VARCHAR}, #{describle,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{num,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{updated,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zm.fx_dao_common.bean.Item">
    insert into tb_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryid != null">
        categoryid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="tiitle != null">
        tiitle,
      </if>
      <if test="describle != null">
        describle,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="categoryid != null">
        #{categoryid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tiitle != null">
        #{tiitle,jdbcType=VARCHAR},
      </if>
      <if test="describle != null">
        #{describle,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zm.fx_dao_common.bean.ItemExample" resultType="java.lang.Long">
    select count(*) from tb_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.categoryid != null">
        categoryid = #{record.categoryid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tiitle != null">
        tiitle = #{record.tiitle,jdbcType=VARCHAR},
      </if>
      <if test="record.describle != null">
        describle = #{record.describle,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_item
    set id = #{record.id,jdbcType=BIGINT},
      categoryid = #{record.categoryid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      tiitle = #{record.tiitle,jdbcType=VARCHAR},
      describle = #{record.describle,jdbcType=VARCHAR},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      num = #{record.num,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zm.fx_dao_common.bean.Item">
    update tb_item
    <set>
      <if test="categoryid != null">
        categoryid = #{categoryid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tiitle != null">
        tiitle = #{tiitle,jdbcType=VARCHAR},
      </if>
      <if test="describle != null">
        describle = #{describle,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zm.fx_dao_common.bean.Item">
    update tb_item
    set categoryid = #{categoryid,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      tiitle = #{tiitle,jdbcType=VARCHAR},
      describle = #{describle,jdbcType=VARCHAR},
      barcode = #{barcode,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      num = #{num,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
<sql id="itemAndCate">
   t.id as tid, categoryid, t.name as tname , tiitle, describle, barcode,price, num, t.status, t.updated, t.created,c.id as cid ,c.name as cname
</sql>
  <sql id="itemAndCateAndDetial">
   t.id as tid, categoryid, t.name as tname , tiitle, describle, barcode,price, num, t.status, t.updated, t.created,c.id as cid ,c.parentid as pid,
   c.name as cname,d.id as did,d.itemid as itemid,d.bigmsg as dmsg
</sql>
  <select id="findAllandCategory" parameterType="com.zm.fx_dao_common.bean.ItemExample" resultMap="ResultMapAndCate">
    select
    <if test="distinct">
      distinct
    </if>
    *
    from tb_item t left join tb_item_category c on c.id  = t.categoryid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectMyPage" parameterType="com.zm.fx_dao_common.bean.ItemExample" resultMap="ResultMapAndCate">
    select
    <include refid="itemAndCate"></include>
    from tb_item t left join tb_item_category c on c.id  = t.categoryid
  </select>

  <select id="selectMyPageByid" parameterType="com.zm.fx_dao_common.bean.ItemExample" resultMap="ResultMapAndCateAndDetial">
    select
    <include refid="itemAndCateAndDetial"></include>
    from tb_item t LEFT JOIN tb_item_category c on t.categoryid = c.id
    LEFT JOIN tb_item_detail d on t.id = d.itemid where t.id = #{id}
  </select>


</mapper>